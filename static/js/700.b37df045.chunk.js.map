{"version":3,"file":"static/js/700.b37df045.chunk.js","mappings":"4QAEaA,EAAOC,EAAAA,EAAAA,KAAH,kQAWJC,EAAYD,EAAAA,EAAAA,MAAH,mEAITE,EAAYF,EAAAA,EAAAA,MAAH,oGAMTG,EAAcH,EAAAA,EAAAA,OAAH,2E,SCqDxB,EAtEuB,WACrB,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,OAAQZ,GACN,IAAK,OAEH,YADAC,EAAQW,GAEV,IAAK,SAEH,YADAT,EAAUS,GAEZ,QACE,OAEL,EAcKC,EAAY,WAChBZ,EAAQ,IACRE,EAAU,GACX,EAED,OACE,+BACI,UAACT,EAAD,CAAMoB,SAnBS,SAAAJ,GAEnB,GADAA,EAAEK,iBAEAX,EAASY,MACP,SAAAC,GAAO,OAAIA,EAAQjB,KAAKkB,gBAAkBlB,EAAKkB,aAAxC,IAET,OAAOC,MAAM,GAAD,OAAInB,EAAJ,6BAEdO,GAASa,EAAAA,EAAAA,IAAW,CAACpB,KAAAA,EAAME,OAAAA,KAC3BW,GACD,EASK,WACE,UAACjB,EAAD,oBACE,SAACC,EAAD,CACEwB,KAAK,OACLrB,KAAK,OACPY,MAAOZ,EACPsB,SAAUb,EACRc,YAAY,sBACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC9B,EAAD,2BACE,SAACC,EAAD,CACEwB,KAAK,MACLrB,KAAK,SACPY,MAAOV,EACPoB,SAAUb,EACRc,YAAY,YACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC5B,EAAD,CAAauB,KAAK,SAAlB,6BAIT,ECxEYM,EAAOhC,EAAAA,EAAAA,GAAH,gGAOJiC,EAAWjC,EAAAA,EAAAA,GAAH,qGAMRkC,EAAelC,EAAAA,EAAAA,OAAH,iGAOZmC,EAAOnC,EAAAA,EAAAA,EAAH,kECjBJoC,EAAc,WACzB,IAAMxB,GAAWC,EAAAA,EAAAA,MACXwB,GAAiB3B,EAAAA,EAAAA,IAAY4B,EAAAA,IAEnC,OACE,SAACN,EAAD,UACGK,EAAeE,KAAI,gBAAGC,EAAH,EAAGA,GAAInC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAClB,UAAC0B,EAAD,YACE,UAACE,EAAD,WAAO9B,EAAP,MAAgBE,MAChB,SAAC2B,EAAD,CAAcR,KAAK,SAASe,QAAS,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAcF,GAA7B,EAArC,8BAFaA,EADG,KAUzB,E,UCbc,SAASG,IACtB,IAAM/B,GAAWC,EAAAA,EAAAA,MACX+B,GAAYlC,EAAAA,EAAAA,IAAYmC,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,iCACE,SAACoC,EAAA,EAAD,WACE,gDAEF,SAAC,EAAD,KACA,yBAAMJ,GAAa,4BACnB,SAACR,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 0 auto;\n  width: 960px;\n  height: 60px;\n  border: 1px solid black;\n  border-radius: 5px;\n  box-shadow: 7px 13px 7px -3px rgba(189,178,189,1);\n`;\nexport const FormLabel = styled.label`\n  padding-left: 14px;\n  font-size: 20px;\n`;\nexport const FormInput = styled.input`\n  margin-left: 10px;\n  width: 280px;\n  padding: 5px;\n  font-size: 16px;\n`;\nexport const InputButton = styled.button`\n  padding: 5px;\n  width: 100px;\n  height: 30px;\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, FormLabel, FormInput, InputButton } from './ContactForm.styled';\n\nconst AddContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        return;\n      case 'number':\n        setNumber(value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase())\n    )\n      return alert(`${name} is already in contacts.`);\n\n    dispatch(addContact({name, number}));\n    resetForm();\n  }\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <>\n        <Form onSubmit={handleSubmit}>\n          <FormLabel> Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n              placeholder=\"Oleksandr Veremchuk\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n          <FormLabel>Phone number\n            <FormInput\n              type=\"tel\"\n              name=\"number\"\n            value={number}\n            onChange={handleInputChange}\n              placeholder=\"555-55-55\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FormLabel>\n          <InputButton type=\"submit\">Add contact</InputButton>\n        </Form>\n      </>\n  )\n}\n\nexport default AddContactForm;","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  list-style: none;\n  padding: 0;\n  width: 450px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const DeleteButton = styled.button`\n  margin-left: 14px;\n  padding: 5px;\n  width: 120px;\n  height: 30px;\n`;\n\nexport const Text = styled.p`\n  margin-right: 20px;\n  font-size: 20px\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\nimport { List, ListItem, DeleteButton, Text } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(selectFilterContacts);\n\n  return (\n    <List>\n      {filterContacts.map(({ id, name, number}) => (\n        <ListItem key={id}>\n          <Text>{name} - {number}</Text>\n          <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete Contact\n          </DeleteButton>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\n","import AddContactForm from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <AddContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList/>\n    </>\n  )\n}"],"names":["Form","styled","FormLabel","FormInput","InputButton","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleInputChange","e","target","value","resetForm","onSubmit","preventDefault","find","contact","toLowerCase","alert","addContact","type","onChange","placeholder","pattern","title","required","List","ListItem","DeleteButton","Text","ContactList","filterContacts","selectFilterContacts","map","id","onClick","deleteContact","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}